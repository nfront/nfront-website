{"version":3,"sources":["webpack:///./src/pages/contact.js","webpack:///./src/styles/global.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/SEO.js","webpack:///./src/components/common/layout.js","webpack:///./static/cover.jpg","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/common/menu.js","webpack:///./src/styles/navstyles.js","webpack:///./src/utils/externalLink.js","webpack:///./src/components/sections/Contact.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_common_layout__WEBPACK_IMPORTED_MODULE_1__","_utils_SEO__WEBPACK_IMPORTED_MODULE_2__","_common_menu__WEBPACK_IMPORTED_MODULE_3__","_sections_Contact__WEBPACK_IMPORTED_MODULE_4__","_utils_externalLink__WEBPACK_IMPORTED_MODULE_5__","_styles_global__WEBPACK_IMPORTED_MODULE_6__","styled_components__WEBPACK_IMPORTED_MODULE_7__","StyledSection","styled","Section","withConfig","displayName","componentId","props","theme","screen","sm","Grid","div","a","createElement","title","className","href","d","Container","SectionTitle","Overlay","styled_components__WEBPACK_IMPORTED_MODULE_0__","xs","md","lg","fluid","section","alt","accent","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","m","module","exports","require","default","SEO","_ref","lang","meta","keywords","description","image","pathname","data","_public_static_d_3030054132_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","site","siteMetadata","metaImage","siteUrl","defaultImage","metaUrl","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","width","height","length","join","defaultProps","Layout","children","_public_static_d_980326015_json__WEBPACK_IMPORTED_MODULE_0__","styled_components__WEBPACK_IMPORTED_MODULE_2__","Fragment","_utils_SEO__WEBPACK_IMPORTED_MODULE_4__","p","ProdPageRenderer","location","pageResources","InternalPageRenderer","_objectSpread","json","Menu","react__WEBPACK_IMPORTED_MODULE_3___default","path","map","_styles_navstyles_js__WEBPACK_IMPORTED_MODULE_5__","key","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","Navbar","_useState","useState","isMenuOpen","setIsMenuOpen","toggleClassName","changeMenuColor","_public_static_d_558995515_json__WEBPACK_IMPORTED_MODULE_2__","Object","assign","desktop","onClick","NavContainer","Nav","NavList","NavItem","Brand","Mobile","Hamburger","nav","ul","li","ExternalLink","other","_objectWithoutPropertiesLoose","react__WEBPACK_IMPORTED_MODULE_5___default","rel","target","ContactForm","react__WEBPACK_IMPORTED_MODULE_7___default","formik__WEBPACK_IMPORTED_MODULE_8__","initialValues","email","message","validate","values","errors","test","onSubmit","fetch","method","headers","Content-Type","body","form-name","keys","encodeURIComponent","then","navigate","catch","error","alert","isSubmitting","touched","data-netlify","action","type","value","htmlFor","autocomplete","component","rows"],"mappings":"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","file":"component---src-pages-contact-js-0682861103a8aeb81792.js","sourcesContent":["import React from 'react';\nimport Layout from '@common/layout';\nimport SEO from '@utils/SEO';\nimport Menu from '@common/menu';\nimport Contact from '@sections/Contact';\nimport ExternalLink from '@utils/externalLink';\nimport { Section, Container } from '@styles/global';\nimport styled from 'styled-components';\n\nconst StyledSection = styled(Section)`\n    padding: 5rem 0;\n    @media (min-width: ${props => props.theme.screen.sm}) {\n        padding: 7rem 0;\n    }\n`;\nconst Grid = styled.div`\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-gap: 50px;\n\n    @media (min-width: ${props => props.theme.screen.sm}) {\n        grid-template-columns: repeat(2, 1fr);\n    }\n\n    a {\n        font-weight: 500;\n    }\n\n    .button {\n        border-radius: 0;\n    }\n`;\n\nexport default () => {\n    const title = 'Contact Us';\n    return (\n        <Layout>\n            <SEO title={title} />\n            <Menu />\n            <StyledSection>\n                <Container>\n                    <h2>{title}</h2>\n                    <blockquote>\n                        <p>\n                            Let's talk about your idea – fill in the form below\n                            and we will contact you within one day. We can't\n                            wait to start working with you!\n                        </p>\n                    </blockquote>\n                    <Grid>\n                        <Contact />\n                        <div className=\"\">\n                            <label>Drop us an email at</label>\n                            <p>info@nfront.io</p>\n                            <label>Visit us for a coffee at</label>\n                            <p>\n                                <ExternalLink href=\"https://goo.gl/maps/X1k1eo7YebbSehEP9\">\n                                    Tollbugata 24, 0157\n                                    <br />\n                                    Oslo, Norway\n                                </ExternalLink>\n                            </p>\n                            <label>Call us at</label>\n                            <p>+47 45848507</p>\n                        </div>\n                    </Grid>\n                </Container>\n            </StyledSection>\n        </Layout>\n    );\n};\n","import styled from 'styled-components';\n\nconst theme = {\n    screen: {\n        xs: '575px',\n        sm: '767px',\n        md: '991px',\n        lg: '1199px',\n    },\n};\nexport default theme;\n\nexport const Container = styled.div`\n    max-width: var(--max-width);\n    width: 100%;\n    margin: 0 auto;\n    padding: 0 1.5rem;\n\n    ${props =>\n        props.fluid &&\n        `\n        max-width: 100%;\n    `};\n`;\n\nexport const Section = styled.section`\n    padding: 4rem 0;\n\n    ${props =>\n        props.alt &&\n        `\n        background-color: var(--accent-color);  \n    `};\n\n    ${props =>\n        props.accent === 'alt' &&\n        `\n        background-color: var(--alt-blue);\n        h2,\n        p {\n            color: var(--accent-color)!important;\n        }\n    `};\n`;\n\nexport const SectionTitle = styled.div`\n    margin-bottom: 3rem;\n    text-align: center;\n\n    @media (min-width: ${props => props.theme.screen.sm}) {\n        margin-bottom: 3rem;\n    }\n`;\n\n/**\n *  background overlay color\n *\n *  red -- rgba(210, 24, 76, 0.7)\n *  brown -- rgba(183, 73, 73, 0.7)\n *  blue -- rgba(29, 69, 106, 0.7)\n *  black --  rgba(16, 36, 55, 0.7)\n *  green -- rgba(0, 159, 153, 0.7)\n */\n\nexport const Overlay = styled.div`\n    background: rgba(12, 23, 41, 0.8);\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    opacity: 1;\n    transition: all 0.4s ease-in-out 0s;\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport defaultImage from '@static/cover.jpg';\n\nexport default function SEO({\n    lang,\n    meta,\n    keywords,\n    title,\n    description,\n    image,\n    pathname,\n}) {\n    const data = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        siteUrl\n                        description\n                        social {\n                            twitter\n                        }\n                    }\n                }\n            }\n        `\n    );\n\n    const metaDescription = description || data.site.siteMetadata.description;\n    const metaImage = data.site.siteMetadata.siteUrl + (image || defaultImage);\n    const metaUrl = `${data.site.siteMetadata.siteUrl}${pathname}`;\n\n    return (\n        <Helmet\n            htmlAttributes={{\n                lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:title`,\n                    content: title,\n                },\n                {\n                    property: `og:url`,\n                    content: metaUrl,\n                },\n                {\n                    property: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: `@${data.site.siteMetadata.social.twitter}`,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n            ]\n                .concat(\n                    metaImage\n                        ? [\n                              {\n                                  property: `og:image`,\n                                  content: metaImage,\n                              },\n                              {\n                                  property: `og:image:alt`,\n                                  content: title,\n                              },\n                              {\n                                  property: 'og:image:width',\n                                  content: image.width,\n                              },\n                              {\n                                  property: 'og:image:height',\n                                  content: image.height,\n                              },\n                              {\n                                  name: `twitter:card`,\n                                  content: `summary_large_image`,\n                              },\n                              {\n                                  name: `twitter:image`,\n                                  content: metaImage,\n                              },\n                          ]\n                        : [\n                              {\n                                  name: `twitter:card`,\n                                  content: `summary`,\n                              },\n                          ]\n                )\n                .concat(\n                    keywords.length > 0\n                        ? {\n                              name: `keywords`,\n                              content: keywords.join(`, `),\n                          }\n                        : []\n                )\n                .concat(meta)}\n        />\n    );\n}\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    keywords: [],\n    pathname: ``,\n    image: ``,\n};\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport theme from '@styles/global';\nimport SEO from '@utils/SEO';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nexport default function Layout({ children }) {\n    const data = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                    }\n                }\n            }\n        `\n    );\n    return (\n        <ThemeProvider theme={theme}>\n            <>\n                <SEO title={data.site.siteMetadata.title} />\n                <main>{children}</main>\n            </>\n        </ThemeProvider>\n    );\n}\n","module.exports = __webpack_public_path__ + \"static/cover-030d79644f497a8e06c7ed38f6cd550d.jpg\";","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { useState } from 'react';\nimport { Link } from 'gatsby';\nimport { useStaticQuery, graphql } from 'gatsby';\n\n/*\nimport { ReactComponent as Logo } from '@static/logo.svg';\n*/\n\nimport {\n    NavContainer,\n    Nav,\n    NavList,\n    NavItem,\n    Brand,\n    Mobile,\n    Hamburger,\n} from '@styles/navstyles.js';\n\nfunction Menu() {\n    const items = [\n        {\n            name: 'About',\n            path: '/#about',\n        },\n        {\n            name: 'Capital',\n            path: '/venture-capital/',\n        },\n        {\n            name: 'Software',\n            path: '/software-development/',\n        },\n        {\n            name: 'Contact',\n            path: '/contact/',\n        },\n    ];\n    return (\n        <>\n            {items.map(({ name, path }) => {\n                return (\n                    <NavItem key={name}>\n                        <Link to={path}>{name}</Link>\n                    </NavItem>\n                );\n            })}\n        </>\n    );\n}\n\nexport default function Navbar(props) {\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    const toggleClassName = isMenuOpen ? 'hamburger is-open' : 'hamburger';\n    const changeMenuColor = isMenuOpen ? 'is-open' : '';\n\n    const data = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    title\n                }\n            }\n        }\n    `);\n    return (\n        <Nav {...props} className={changeMenuColor}>\n            <NavContainer>\n                <Brand>\n                    <Link to=\"/\">{data.site.siteMetadata.title}</Link>\n                </Brand>\n                <NavList desktop>\n                    <Menu />\n                </NavList>\n            </NavContainer>\n            <Mobile>\n                <Hamburger\n                    className={toggleClassName}\n                    onClick={() => setIsMenuOpen(!isMenuOpen)}\n                >\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                </Hamburger>\n\n                {isMenuOpen && (\n                    <NavList>\n                        <Menu />\n                    </NavList>\n                )}\n            </Mobile>\n        </Nav>\n    );\n}\n","import styled from 'styled-components';\n\nexport const NavContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    @media (max-width: ${props => props.theme.screen.md}) {\n        padding: 0 1.5rem;\n    }\n`;\n\nexport const Nav = styled.nav`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    width: 100%;\n    max-width: var(--max-width);\n    margin: 0 auto;\n    z-index: 1000;\n    padding: 1rem 1.5rem;\n    background-color: transparent;\n\n    @media (max-width: ${props => props.theme.screen.md}) {\n        padding: 1rem 0;\n    }\n\n    &.is-open {\n        /** change background and link color when menu is open */\n        background-color: var(--alt-color);\n        height: 100vh;\n        overflow: hidden;\n        a {\n            color: var(--secondary-color);\n        }\n    }\n\n    font-size: 90%;\n    font-weight: 500;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n\n    ${props =>\n        props.accent ===\n            'inverse' /** change link color to white on dark background */ &&\n        `\n        a {\n            color: var(--accent-color);\n        }\n    }\n    `};\n\n    ${props =>\n        props.fluid /** stretch menu to 100% width  */ &&\n        `\n        max-width: 100%;\n    `};\n`;\n\nexport const NavList = styled.ul`\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    margin: 1rem 0;\n\n    ${props =>\n        props.desktop &&\n        `\n        flex-direction: row;\n        margin: 0;\n        \n        @media (max-width: ${props.theme.screen.md}) {\n            display: none;\n        }\n    `};\n`;\n\nexport const NavItem = styled.li`\n    position: relative;\n    margin-bottom: 0;\n    margin-left: 1.5rem;\n    width: 100%;\n\n    @media (max-width: ${props => props.theme.screen.md}) {\n        margin-left: 0;\n        padding: 0.75rem 1.5rem;\n        border-bottom: 1px solid rgba(225, 225, 225, 0.4);\n\n        &:first-child {\n            border-top: 1px solid rgba(225, 225, 225, 0.4);\n        }\n    }\n\n    &.active {\n        a {\n            font-weight: 600;\n        }\n    }\n    @media (min-width: ${props => props.theme.screen.md}) {\n        ::after {\n            content: '';\n            position: absolute;\n            width: 100%;\n            transform: scaleX(0);\n            height: 2px;\n            bottom: 0;\n            left: 0;\n            background-color: var(--secondary-color);\n            transform-origin: bottom right;\n            transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\n        }\n        :hover::after {\n            transform: scaleX(1);\n            transform-origin: bottom left;\n        }\n    }\n`;\n\nexport const Brand = styled.div``;\n\nexport const Mobile = styled.div`\n    opacity: 0;\n    display: none;\n    transition: all 0.25s ease;\n\n    @media (max-width: ${props => props.theme.screen.md}) {\n        opacity: 1;\n        display: block;\n        visibility: visible;\n    }\n`;\n\nexport const Hamburger = styled.div`\n    position: absolute;\n    top: 1rem;\n    right: 1.5rem;\n    width: 25px;\n    cursor: pointer;\n    -webkit-tap-highlight-color: hsla(0, 0%, 0%, 0);\n    -webkit-tap-highlight-color: transparent;\n\n    span {\n        display: block;\n        opacity: 1;\n        width: 100%;\n        height: 3px;\n        margin: 4px 0;\n        background: var(--secondary-color);\n        transition: all 0.25s ease-in-out;\n\n        &:nth-child(2) {\n            width: 70%;\n        }\n    }\n\n    &.is-open {\n        span {\n            background: var(--secondary-color);\n        }\n        span:first-child {\n            transform: translateY(8px) translateY(-50%) rotate(45deg);\n        }\n        span:nth-child(2) {\n            opacity: 0;\n        }\n        span:last-child {\n            transform: translateY(-9px) translateY(50%) rotate(-45deg);\n        }\n    }\n`;\n","import React from 'react';\n\nconst ExternalLink = ({ href, children, ...other }) => (\n    <a href={href} {...other} rel=\"noreferrer noopener\" target=\"_blank\">\n        {children}\n    </a>\n);\n\nexport default ExternalLink;\n","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { navigate } from 'gatsby';\n\nfunction encode(data) {\n    return Object.keys(data)\n        .map(\n            key => encodeURIComponent(key) + '=' + encodeURIComponent(data[key])\n        )\n        .join('&');\n}\n\nconst ContactForm = () => (\n    <Formik\n        initialValues={{ name: '', email: '', message: '' }}\n        validate={values => {\n            let errors = {};\n            if (!values.name) {\n                errors.name = 'Name is required';\n            } else if (values.name.length < 3) {\n                errors.name = 'Name is too short';\n            }\n            if (!values.email) {\n                errors.email = 'Email is required';\n            } else if (\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n            ) {\n                errors.email = 'Invalid email address';\n            }\n            if (!values.message) {\n                errors.message = 'Say something, maybe?';\n            } else if (values.message.length < 20) {\n                errors.message = 'Message is too short';\n            }\n            return errors;\n        }}\n        onSubmit={values => {\n            fetch('/contact', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                body: encode({\n                    'form-name': 'Contact Form',\n                    ...values,\n                }),\n            })\n                .then(navigate('/thanks'))\n                .catch(error => alert(error));\n        }}\n    >\n        {({ isSubmitting, errors, touched }) => (\n            <Form name=\"Contact Form\" data-netlify=\"true\" action=\"/thanks\">\n                <input type=\"hidden\" name=\"form-name\" value=\"Contact Form\" />\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Name</label>\n                    <Field\n                        type=\"text\"\n                        name=\"name\"\n                        className={\n                            errors.name && touched.name ? ' has-error' : ''\n                        }\n                        autocomplete=\"off\"\n                    />\n                    <ErrorMessage\n                        name=\"name\"\n                        component=\"code\"\n                        className=\"error-message\"\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email </label>\n                    <Field\n                        type=\"email\"\n                        name=\"email\"\n                        className={\n                            errors.email && touched.email ? ' has-error' : ''\n                        }\n                        autocomplete=\"off\"\n                    />\n                    <ErrorMessage\n                        name=\"email\"\n                        component=\"code\"\n                        className=\"error-message\"\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"message\">Message</label>\n                    <Field\n                        component=\"textarea\"\n                        rows=\"8\"\n                        name=\"message\"\n                        className={\n                            errors.message && touched.message\n                                ? ' has-error'\n                                : ''\n                        }\n                    />\n                    <ErrorMessage\n                        name=\"message\"\n                        component=\"code\"\n                        className=\"error-message\"\n                    />\n                </div>\n                <button className=\"button\" type=\"submit\">\n                    Submit\n                </button>\n            </Form>\n        )}\n    </Formik>\n);\n\nexport default ContactForm;\n"],"sourceRoot":""}