{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/styles/global.js","webpack:///./src/utils/SEO.js","webpack:///./src/components/common/layout.js","webpack:///./static/cover.jpg"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_common_layout__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_3__","_styles_global__WEBPACK_IMPORTED_MODULE_4__","StyledContainer","styled","Container","withConfig","displayName","componentId","NotFoundPage","a","createElement","to","className","d","Section","styled_components__WEBPACK_IMPORTED_MODULE_0__","theme","screen","xs","sm","md","lg","div","props","fluid","section","accent","SEO","_ref","lang","meta","keywords","title","description","image","pathname","data","_public_static_d_3030054132_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","site","siteMetadata","metaImage","siteUrl","defaultImage","metaUrl","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","width","height","length","join","defaultProps","Layout","children","_public_static_d_980326015_json__WEBPACK_IMPORTED_MODULE_0__","styled_components__WEBPACK_IMPORTED_MODULE_2__","Fragment","_utils_SEO__WEBPACK_IMPORTED_MODULE_4__","module","exports","p"],"mappings":"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","file":"component---src-pages-404-js-048c8d4d4939cb01906a.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport Layout from '@common/layout';\nimport styled from 'styled-components';\nimport { Container } from '@styles/global';\n\nconst StyledContainer = styled(Container)`\n    display: flex;\n    flex-flow: column;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n`;\n\nconst NotFoundPage = () => (\n    <Layout>\n        <StyledContainer>\n            <h1>NOT FOUND</h1>\n            <p>\n                You just hit a page that doesn&#39;t exist or has been removed.\n            </p>\n            <Link to=\"/\">\n                <button className=\"button primary\">Go back</button>\n            </Link>\n        </StyledContainer>\n    </Layout>\n);\n\nexport default NotFoundPage;\n","import styled from 'styled-components';\n\nconst theme = {\n    screen: {\n        xs: '575px',\n        sm: '767px',\n        md: '991px',\n        lg: '1199px',\n    },\n};\nexport default theme;\n\nexport const Container = styled.div`\n    max-width: var(--max-width);\n    width: 100%;\n    margin: 0 auto;\n    padding: 0 1.5rem;\n\n    ${props =>\n        props.fluid &&\n        `\n        max-width: 100%;\n    `};\n`;\n\nexport const Section = styled.section`\n    padding: 5rem 0;\n\n    @media (min-width: ${props => props.theme.screen.sm}) {\n        padding: 7rem 0;\n    }\n\n    ${props =>\n        props.accent === 'secondary' &&\n        `\n        background-color: var(--primary-color);        \n    `};\n\n    ${props =>\n        props.accent === 'alt' &&\n        `\n        background-color: #266590; \n        h2,\n        p {\n            color: white;\n        }\n    `};\n\n    ${props =>\n        props.accent === 'magnus' &&\n        `\n        background-color: #3e505a;  \n        \n        h2,\n        p {\n            color: var(--accent-color);\n        }\n    `};\n\n    ${props =>\n        props.accent === 'matt' &&\n        `\n        background-color: #266590;  \n        \n        h2,\n        p {\n            color: var(--accent-color);\n        }\n    `};\n`;\n\nexport const Hero = styled(Container)`\n    display: flex;\n    flex-flow: column;\n    justify-content: center;\n    align-items: center;\n    min-width: 100%;\n    min-height: 100vh;\n    color: var(--secondary-color);\n    background-color: var(--primary-color);\n\n    ${props =>\n        props.accent === 'inverse' &&\n        `\n        background-color: var(--alt-color);\n    `};\n`;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport defaultImage from '@static/cover.jpg';\n\nexport default function SEO({\n    lang,\n    meta,\n    keywords,\n    title,\n    description,\n    image,\n    pathname,\n}) {\n    const data = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        siteUrl\n                        description\n                        social {\n                            twitter\n                        }\n                    }\n                }\n            }\n        `\n    );\n\n    const metaDescription = description || data.site.siteMetadata.description;\n    const metaImage = data.site.siteMetadata.siteUrl + (image || defaultImage);\n    const metaUrl = `${data.site.siteMetadata.siteUrl}${pathname}`;\n\n    return (\n        <Helmet\n            htmlAttributes={{\n                lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:title`,\n                    content: title,\n                },\n                {\n                    property: `og:url`,\n                    content: metaUrl,\n                },\n                {\n                    property: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: `@${data.site.siteMetadata.social.twitter}`,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n            ]\n                .concat(\n                    metaImage\n                        ? [\n                              {\n                                  property: `og:image`,\n                                  content: metaImage,\n                              },\n                              {\n                                  property: `og:image:alt`,\n                                  content: title,\n                              },\n                              {\n                                  property: 'og:image:width',\n                                  content: image.width,\n                              },\n                              {\n                                  property: 'og:image:height',\n                                  content: image.height,\n                              },\n                              {\n                                  name: `twitter:card`,\n                                  content: `summary_large_image`,\n                              },\n                              {\n                                  name: `twitter:image`,\n                                  content: metaImage,\n                              },\n                          ]\n                        : [\n                              {\n                                  name: `twitter:card`,\n                                  content: `summary`,\n                              },\n                          ]\n                )\n                .concat(\n                    keywords.length > 0\n                        ? {\n                              name: `keywords`,\n                              content: keywords.join(`, `),\n                          }\n                        : []\n                )\n                .concat(meta)}\n        />\n    );\n}\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    keywords: [],\n    pathname: ``,\n    image: ``,\n};\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport theme from '@styles/global';\nimport SEO from '@utils/SEO';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nexport default function Layout({ children }) {\n    const data = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                    }\n                }\n            }\n        `\n    );\n    return (\n        <ThemeProvider theme={theme}>\n            <>\n                <SEO title={data.site.siteMetadata.title} />\n                <main>{children}</main>\n            </>\n        </ThemeProvider>\n    );\n}\n","module.exports = __webpack_public_path__ + \"static/cover-030d79644f497a8e06c7ed38f6cd550d.jpg\";"],"sourceRoot":""}