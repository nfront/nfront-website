{"version":3,"sources":["webpack:///./src/pages/tags.js","webpack:///./src/styles/global.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/SEO.js","webpack:///./src/components/common/layout.js","webpack:///./static/cover.jpg","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/common/menu.js","webpack:///./src/styles/navstyles.js"],"names":["__webpack_require__","r","__webpack_exports__","d","tagQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_common_layout__WEBPACK_IMPORTED_MODULE_2__","_utils_SEO__WEBPACK_IMPORTED_MODULE_3__","_common_menu__WEBPACK_IMPORTED_MODULE_4__","_styles_global__WEBPACK_IMPORTED_MODULE_5__","TagList","styled","h4","withConfig","displayName","componentId","TagsPage","props","data","allMdx","group","a","createElement","title","map","tag","to","fieldValue","totalCount","Container","Section","SectionTitle","Overlay","styled_components__WEBPACK_IMPORTED_MODULE_0__","theme","screen","xs","sm","md","lg","div","fluid","section","alt","accent","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","m","module","exports","require","default","SEO","_ref","lang","meta","keywords","description","image","pathname","_public_static_d_3030054132_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","site","siteMetadata","metaImage","siteUrl","defaultImage","metaUrl","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","width","height","length","join","defaultProps","Layout","children","_public_static_d_980326015_json__WEBPACK_IMPORTED_MODULE_0__","styled_components__WEBPACK_IMPORTED_MODULE_2__","Fragment","_utils_SEO__WEBPACK_IMPORTED_MODULE_4__","p","ProdPageRenderer","location","pageResources","InternalPageRenderer","_objectSpread","json","Menu","react__WEBPACK_IMPORTED_MODULE_3___default","path","_styles_navstyles_js__WEBPACK_IMPORTED_MODULE_5__","key","gatsby__WEBPACK_IMPORTED_MODULE_4__","Navbar","_useState","useState","isMenuOpen","setIsMenuOpen","toggleClassName","changeMenuColor","_public_static_d_558995515_json__WEBPACK_IMPORTED_MODULE_2__","Object","assign","className","desktop","onClick","NavContainer","Nav","NavList","NavItem","Brand","Mobile","Hamburger","nav","ul","li"],"mappings":"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","file":"component---src-pages-tags-js-d385751969d26eb4f6d8.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Layout from '@common/layout';\nimport SEO from '@utils/SEO';\nimport Menu from '@common/menu';\nimport { Section, Container } from '@styles/global';\nimport styled from 'styled-components';\n\nconst TagList = styled.h4`\n    display: flex;\n    justify-content: space-between;\n`;\n\nfunction TagsPage(props) {\n    const data = props.data.allMdx.group;\n    const title = 'All Tags';\n    return (\n        <Layout>\n            <SEO title={title} />\n            <Menu />\n            <Section>\n                <Container>\n                    <h2>{title}</h2>\n                    <p>\n                        Similar to categories, tags are often used to organize\n                        your content. A tag is usually only a word or two and\n                        reflects the keywords or points of your article.\n                    </p>\n                    <hr />\n                    {data.map(tag => (\n                        <div>\n                            <Link to={`tag/${tag.fieldValue}`}>\n                                <TagList>\n                                    {tag.fieldValue}{' '}\n                                    <span>{`(${tag.totalCount})`}</span>\n                                </TagList>\n                            </Link>\n                            <hr />\n                        </div>\n                    ))}\n                </Container>\n            </Section>\n        </Layout>\n    );\n}\n\nexport default TagsPage;\n\nexport const tagQuery = graphql`\n    query {\n        allMdx {\n            group(field: frontmatter___tags) {\n                fieldValue\n                totalCount\n            }\n        }\n    }\n`;\n","import styled from 'styled-components';\n\nconst theme = {\n    screen: {\n        xs: '575px',\n        sm: '767px',\n        md: '991px',\n        lg: '1199px',\n    },\n};\nexport default theme;\n\nexport const Container = styled.div`\n    max-width: var(--max-width);\n    width: 100%;\n    margin: 0 auto;\n    padding: 0 1.5rem;\n\n    ${props =>\n        props.fluid &&\n        `\n        max-width: 100%;\n    `};\n`;\n\nexport const Section = styled.section`\n    padding: 4rem 0;\n\n    ${props =>\n        props.alt &&\n        `\n        background-color: var(--accent-color);  \n    `};\n\n    ${props =>\n        props.accent === 'alt' &&\n        `\n        background-color: var(--alt-blue);\n        h2,\n        p {\n            color: var(--accent-color)!important;\n        }\n    `};\n`;\n\nexport const SectionTitle = styled.div`\n    margin-bottom: 3rem;\n    text-align: center;\n\n    @media (min-width: ${props => props.theme.screen.sm}) {\n        margin-bottom: 3rem;\n    }\n`;\n\n/**\n *  background overlay color\n *\n *  red -- rgba(210, 24, 76, 0.7)\n *  brown -- rgba(183, 73, 73, 0.7)\n *  blue -- rgba(29, 69, 106, 0.7)\n *  black --  rgba(16, 36, 55, 0.7)\n *  green -- rgba(0, 159, 153, 0.7)\n */\n\nexport const Overlay = styled.div`\n    background: rgba(12, 23, 41, 0.8);\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    opacity: 1;\n    transition: all 0.4s ease-in-out 0s;\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport defaultImage from '@static/cover.jpg';\n\nexport default function SEO({\n    lang,\n    meta,\n    keywords,\n    title,\n    description,\n    image,\n    pathname,\n}) {\n    const data = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        siteUrl\n                        description\n                        social {\n                            twitter\n                        }\n                    }\n                }\n            }\n        `\n    );\n\n    const metaDescription = description || data.site.siteMetadata.description;\n    const metaImage = data.site.siteMetadata.siteUrl + (image || defaultImage);\n    const metaUrl = `${data.site.siteMetadata.siteUrl}${pathname}`;\n\n    return (\n        <Helmet\n            htmlAttributes={{\n                lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:title`,\n                    content: title,\n                },\n                {\n                    property: `og:url`,\n                    content: metaUrl,\n                },\n                {\n                    property: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: `@${data.site.siteMetadata.social.twitter}`,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n            ]\n                .concat(\n                    metaImage\n                        ? [\n                              {\n                                  property: `og:image`,\n                                  content: metaImage,\n                              },\n                              {\n                                  property: `og:image:alt`,\n                                  content: title,\n                              },\n                              {\n                                  property: 'og:image:width',\n                                  content: image.width,\n                              },\n                              {\n                                  property: 'og:image:height',\n                                  content: image.height,\n                              },\n                              {\n                                  name: `twitter:card`,\n                                  content: `summary_large_image`,\n                              },\n                              {\n                                  name: `twitter:image`,\n                                  content: metaImage,\n                              },\n                          ]\n                        : [\n                              {\n                                  name: `twitter:card`,\n                                  content: `summary`,\n                              },\n                          ]\n                )\n                .concat(\n                    keywords.length > 0\n                        ? {\n                              name: `keywords`,\n                              content: keywords.join(`, `),\n                          }\n                        : []\n                )\n                .concat(meta)}\n        />\n    );\n}\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    keywords: [],\n    pathname: ``,\n    image: ``,\n};\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport theme from '@styles/global';\nimport SEO from '@utils/SEO';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nexport default function Layout({ children }) {\n    const data = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                    }\n                }\n            }\n        `\n    );\n    return (\n        <ThemeProvider theme={theme}>\n            <>\n                <SEO title={data.site.siteMetadata.title} />\n                <main>{children}</main>\n            </>\n        </ThemeProvider>\n    );\n}\n","module.exports = __webpack_public_path__ + \"static/cover-030d79644f497a8e06c7ed38f6cd550d.jpg\";","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { useState } from 'react';\nimport { Link } from 'gatsby';\nimport { useStaticQuery, graphql } from 'gatsby';\n\n/*\nimport { ReactComponent as Logo } from '@static/logo.svg';\n*/\n\nimport {\n    NavContainer,\n    Nav,\n    NavList,\n    NavItem,\n    Brand,\n    Mobile,\n    Hamburger,\n} from '@styles/navstyles.js';\n\nfunction Menu() {\n    const items = [\n        {\n            name: 'About',\n            path: '/#about',\n        },\n        {\n            name: 'Capital',\n            path: '/venture-capital/',\n        },\n        {\n            name: 'Software',\n            path: '/software-development/',\n        },\n        {\n            name: 'Contact',\n            path: '/contact/',\n        },\n    ];\n    return (\n        <>\n            {items.map(({ name, path }) => {\n                return (\n                    <NavItem key={name}>\n                        <Link to={path}>{name}</Link>\n                    </NavItem>\n                );\n            })}\n        </>\n    );\n}\n\nexport default function Navbar(props) {\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    const toggleClassName = isMenuOpen ? 'hamburger is-open' : 'hamburger';\n    const changeMenuColor = isMenuOpen ? 'is-open' : '';\n\n    const data = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    title\n                }\n            }\n        }\n    `);\n    return (\n        <Nav {...props} className={changeMenuColor}>\n            <NavContainer>\n                <Brand>\n                    <Link to=\"/\">{data.site.siteMetadata.title}</Link>\n                </Brand>\n                <NavList desktop>\n                    <Menu />\n                </NavList>\n            </NavContainer>\n            <Mobile>\n                <Hamburger\n                    className={toggleClassName}\n                    onClick={() => setIsMenuOpen(!isMenuOpen)}\n                >\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                </Hamburger>\n\n                {isMenuOpen && (\n                    <NavList>\n                        <Menu />\n                    </NavList>\n                )}\n            </Mobile>\n        </Nav>\n    );\n}\n","import styled from 'styled-components';\n\nexport const NavContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    @media (max-width: ${props => props.theme.screen.md}) {\n        padding: 0 1.5rem;\n    }\n`;\n\nexport const Nav = styled.nav`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    width: 100%;\n    max-width: var(--max-width);\n    margin: 0 auto;\n    z-index: 1000;\n    padding: 1rem 1.5rem;\n    background-color: transparent;\n\n    @media (max-width: ${props => props.theme.screen.md}) {\n        padding: 1rem 0;\n    }\n\n    &.is-open {\n        /** change background and link color when menu is open */\n        background-color: var(--alt-color);\n        height: 100vh;\n        overflow: hidden;\n        a {\n            color: var(--secondary-color);\n        }\n    }\n\n    font-size: 90%;\n    font-weight: 500;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n\n    ${props =>\n        props.accent ===\n            'inverse' /** change link color to white on dark background */ &&\n        `\n        a {\n            color: var(--accent-color);\n        }\n    }\n    `};\n\n    ${props =>\n        props.fluid /** stretch menu to 100% width  */ &&\n        `\n        max-width: 100%;\n    `};\n`;\n\nexport const NavList = styled.ul`\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    margin: 1rem 0;\n\n    ${props =>\n        props.desktop &&\n        `\n        flex-direction: row;\n        margin: 0;\n        \n        @media (max-width: ${props.theme.screen.md}) {\n            display: none;\n        }\n    `};\n`;\n\nexport const NavItem = styled.li`\n    position: relative;\n    margin-bottom: 0;\n    margin-left: 1.5rem;\n    width: 100%;\n\n    @media (max-width: ${props => props.theme.screen.md}) {\n        margin-left: 0;\n        padding: 0.75rem 1.5rem;\n        border-bottom: 1px solid rgba(225, 225, 225, 0.4);\n\n        &:first-child {\n            border-top: 1px solid rgba(225, 225, 225, 0.4);\n        }\n    }\n\n    &.active {\n        a {\n            font-weight: 600;\n        }\n    }\n    @media (min-width: ${props => props.theme.screen.md}) {\n        ::after {\n            content: '';\n            position: absolute;\n            width: 100%;\n            transform: scaleX(0);\n            height: 2px;\n            bottom: 0;\n            left: 0;\n            background-color: var(--secondary-color);\n            transform-origin: bottom right;\n            transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\n        }\n        :hover::after {\n            transform: scaleX(1);\n            transform-origin: bottom left;\n        }\n    }\n`;\n\nexport const Brand = styled.div``;\n\nexport const Mobile = styled.div`\n    opacity: 0;\n    display: none;\n    transition: all 0.25s ease;\n\n    @media (max-width: ${props => props.theme.screen.md}) {\n        opacity: 1;\n        display: block;\n        visibility: visible;\n    }\n`;\n\nexport const Hamburger = styled.div`\n    position: absolute;\n    top: 1rem;\n    right: 1.5rem;\n    width: 25px;\n    cursor: pointer;\n    -webkit-tap-highlight-color: hsla(0, 0%, 0%, 0);\n    -webkit-tap-highlight-color: transparent;\n\n    span {\n        display: block;\n        opacity: 1;\n        width: 100%;\n        height: 3px;\n        margin: 4px 0;\n        background: var(--secondary-color);\n        transition: all 0.25s ease-in-out;\n\n        &:nth-child(2) {\n            width: 70%;\n        }\n    }\n\n    &.is-open {\n        span {\n            background: var(--secondary-color);\n        }\n        span:first-child {\n            transform: translateY(8px) translateY(-50%) rotate(45deg);\n        }\n        span:nth-child(2) {\n            opacity: 0;\n        }\n        span:last-child {\n            transform: translateY(-9px) translateY(50%) rotate(-45deg);\n        }\n    }\n`;\n"],"sourceRoot":""}