{"version":3,"sources":["webpack:///./src/templates/bloglist.js","webpack:///./src/components/common/menu.js","webpack:///./src/components/common/header.js"],"names":["Section","styled","section","withConfig","displayName","componentId","props","theme","screen","md","Grid","div","sm","lg","Box","SectionText","Pagination","Archive","render","_this$props","this","data","pageContext","posts","allMdx","edges","previousPagePath","nextPagePath","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_common_layout__WEBPACK_IMPORTED_MODULE_3__","_utils_SEO__WEBPACK_IMPORTED_MODULE_7__","title","_common_menu__WEBPACK_IMPORTED_MODULE_6__","fluid","_common_header__WEBPACK_IMPORTED_MODULE_4__","description","headerImage","map","_ref","i","node","gatsby__WEBPACK_IMPORTED_MODULE_1__","to","fields","slug","key","frontmatter","style","fontSize","excerpt","className","date","timeToRead","_common_footer__WEBPACK_IMPORTED_MODULE_5__","Component","listQuery","Menu","react__WEBPACK_IMPORTED_MODULE_3___default","Fragment","name","path","_styles_navstyles_js__WEBPACK_IMPORTED_MODULE_5__","gatsby__WEBPACK_IMPORTED_MODULE_4__","Navbar","_useState","useState","isMenuOpen","setIsMenuOpen","toggleClassName","changeMenuColor","_public_static_d_558995515_json__WEBPACK_IMPORTED_MODULE_2__","Object","assign","site","siteMetadata","desktop","onClick","HeaderWrapper","Container","Overlay","HeaderText","h1","Text","h2","Header","fileName","image","_public_static_d_2838795815_json__WEBPACK_IMPORTED_MODULE_1__","placeholderImage","find","_ref2","relativePath","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby_background_image__WEBPACK_IMPORTED_MODULE_5___default","childImageSharp","height","width","backgroundColor","backgroundSize","backgroundPosition","display","alignItems","react_reveal_Fade__WEBPACK_IMPORTED_MODULE_4___default","top","bottom","react_anchor_link_smooth_scroll__WEBPACK_IMPORTED_MODULE_7___default","href","class"],"mappings":"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","file":"component---src-templates-bloglist-js-97eefca9831b1a723c0d.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport Layout from '@common/layout';\nimport Header from '@common/header';\nimport Footer from '@common/footer';\nimport Menu from '@common/menu';\nimport SEO from '@utils/SEO';\n\nconst Section = styled.section`\n    background-color: var(--alt-color);\n    padding: 2.5rem 0;\n    overflow: hidden;\n\n    @media (min-width: ${props => props.theme.screen.md}) {\n        padding: 5rem 0;\n    }\n`;\n\nconst Grid = styled.div`\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: min-content;\n    grid-gap: 0;\n    justify-content: space-between;\n    border-top: 1px solid var(--border-color);\n\n    @media (min-width: ${props => props.theme.screen.sm}) {\n        grid-template-columns: repeat(2, 1fr);\n    }\n    @media (min-width: ${props => props.theme.screen.lg}) {\n        grid-template-columns: repeat(3, 1fr);\n    }\n`;\n\nconst Box = styled.div`\n    padding: 2.5rem 1.5rem 1rem;\n    border: 1px solid var(--border-color);\n    border-top: 0;\n    border-left: 0;\n    background-color: white;\n\n    &:hover {\n        cursor: pointer;\n        background-color: var(--alt-color);\n    }\n`;\n\nconst SectionText = styled.div`\n    margin-bottom: 2.5rem;\n    padding-left: 1.5rem;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n`;\n\nconst Pagination = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    margin-top: 2.5rem;\n    margin-left: 1.5rem;\n    padding: 0;\n`;\n\nexport default class Archive extends Component {\n    render() {\n        const { data, pageContext } = this.props;\n        const { edges: posts } = data.allMdx;\n        const { previousPagePath, nextPagePath } = pageContext;\n\n        return (\n            <Layout>\n                <SEO title=\"BLOG\" />\n                <Menu fluid />\n                <Header\n                    title=\"Goodbye, WordPress. Hello, Gatsby.\"\n                    description=\"Gatsby.js is one of the most exciting technologies happened in this decade. Building lightning fast websites have never been easier before.\"\n                    headerImage=\"tony.png\"\n                />\n                <Section>\n                    <SectionText>\n                        <h3>Recent Posts</h3>\n                    </SectionText>\n                    <Grid>\n                        {posts.map(({ node }, i) => (\n                            <Box>\n                                <Link to={node.fields.slug} key={i}>\n                                    <h2>{node.frontmatter.title}</h2>\n                                    <p style={{ fontSize: `90%` }}>\n                                        {node.excerpt}\n                                    </p>\n                                    <p className=\"label\">\n                                        {node.frontmatter.date} â€¢{' '}\n                                        {node.timeToRead} Min Read\n                                    </p>\n                                </Link>\n                            </Box>\n                        ))}\n                        <Pagination>\n                            {nextPagePath ? (\n                                <Link to={nextPagePath}>\n                                    &larr; Older Posts\n                                </Link>\n                            ) : null}\n                            {previousPagePath ? (\n                                <Link to={previousPagePath}>\n                                    Newer Posts &rarr;\n                                </Link>\n                            ) : null}\n                        </Pagination>\n                    </Grid>\n                </Section>\n                <Footer fluid />\n            </Layout>\n        );\n    }\n}\n\nexport const listQuery = graphql`\n    query($skip: Int, $limit: Int) {\n        allMdx(\n            filter: { fileAbsolutePath: { regex: \"/posts/\" } }\n            sort: { order: DESC, fields: [frontmatter___date] }\n            skip: $skip\n            limit: $limit\n        ) {\n            edges {\n                node {\n                    id\n                    excerpt(pruneLength: 250)\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        date(fromNow: true)\n                        title\n                    }\n                    timeToRead\n                }\n            }\n        }\n    }\n`;\n","import React, { useState } from 'react';\nimport { Link } from 'gatsby';\nimport { useStaticQuery, graphql } from 'gatsby';\n\n/*\nimport { ReactComponent as Logo } from '@static/logo.svg';\n*/\n\nimport {\n    NavContainer,\n    Nav,\n    NavList,\n    NavItem,\n    Brand,\n    Mobile,\n    Hamburger,\n} from '@styles/navstyles.js';\n\nfunction Menu() {\n    const items = [\n        {\n            name: 'Data',\n            path: '/spreadsheet/',\n        },\n        {\n            name: 'Portfolio',\n            path: '/portfolio/',\n        },\n        {\n            name: 'Blog',\n            path: '/blog/',\n        },\n        {\n            name: 'Contact',\n            path: '/contact/',\n        },\n    ];\n    return (\n        <>\n            {items.map(({ name, path }) => {\n                return (\n                    <NavItem key={name}>\n                        <Link to={path}>{name}</Link>\n                    </NavItem>\n                );\n            })}\n        </>\n    );\n}\n\nexport default function Navbar(props) {\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    const toggleClassName = isMenuOpen ? 'hamburger is-open' : 'hamburger';\n    const changeMenuColor = isMenuOpen ? 'is-open' : '';\n\n    const data = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    title\n                }\n            }\n        }\n    `);\n    return (\n        <Nav {...props} className={changeMenuColor}>\n            <NavContainer>\n                <Brand>\n                    <Link to=\"/\">{data.site.siteMetadata.title}</Link>\n                </Brand>\n                <NavList desktop>\n                    <Menu />\n                </NavList>\n            </NavContainer>\n            <Mobile>\n                <Hamburger\n                    className={toggleClassName}\n                    onClick={() => setIsMenuOpen(!isMenuOpen)}\n                >\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                </Hamburger>\n\n                {isMenuOpen && (\n                    <NavList>\n                        <Menu />\n                    </NavList>\n                )}\n            </Mobile>\n        </Nav>\n    );\n}\n","import React from 'react';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport Fade from 'react-reveal/Fade';\nimport BackgroundImage from 'gatsby-background-image';\nimport { Container } from '@styles/global';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport styled from 'styled-components';\n\nconst HeaderWrapper = styled(Container)`\n    position: absolute;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    opacity: 1;\n\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-flow: column;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Overlay = styled.div`\n    background: rgba(12, 23, 41, 0.8);\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    opacity: 1;\n    transition: all 0.4s ease-in-out 0s;\n`;\n\nconst HeaderText = styled.h1`\n    color: var(--accent-color);\n    font-size: 2rem;\n    font-weight: 900;\n    letter-spacing: 2px;\n    text-transform: uppercase;\n\n    @media (min-width: ${props => props.theme.screen.sm}) {\n        font-size: 3rem;\n    }\n\n    @media (min-width: ${props => props.theme.screen.lg}) {\n        font-size: 4rem;\n    }\n\n    span {\n        color: var(--yellow);\n        font-size: 2.5rem;\n        @media (min-width: ${props => props.theme.screen.sm}) {\n            font-size: 4rem;\n        }\n        @media (min-width: ${props => props.theme.screen.md}) {\n            font-size: 5rem;\n        }\n    }\n`;\n\nconst Text = styled.h2`\n    color: var(--yellow);\n    margin-bottom: 0;\n    font-weight: 400;\n`;\n\nexport default function Header({ fileName }) {\n    const data = useStaticQuery(\n        graphql`\n            query {\n                placeholderImage: allFile(\n                    filter: { sourceInstanceName: { eq: \"art\" } }\n                ) {\n                    edges {\n                        node {\n                            relativePath\n                            childImageSharp {\n                                fluid(maxWidth: 2480, quality: 100) {\n                                    ...GatsbyImageSharpFluid_withWebp\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        `\n    );\n\n    const image = data.placeholderImage.edges.find(\n        ({ node }) => node.relativePath === fileName\n    ).node;\n\n    if (!image) {\n        return null;\n    }\n\n    return (\n        <>\n            <BackgroundImage\n                fluid={image.childImageSharp.fluid}\n                style={{\n                    height: `100vh`,\n                    width: `100vw`,\n                    backgroundColor: `transparent`,\n                    backgroundSize: `cover`,\n                    backgroundPosition: `center center`,\n                    display: `flex`,\n                    alignItems: `center`,\n                }}\n            >\n                <Overlay />\n            </BackgroundImage>\n            <HeaderWrapper>\n                <div>\n                    <Fade top>\n                        <Text>we help businesses</Text>\n                    </Fade>\n                    <Fade bottom>\n                        <HeaderText>\n                            innovate <span>+</span> grow\n                        </HeaderText>\n                    </Fade>\n\n                    <AnchorLink href=\"#portfolio\">\n                        <button className=\"button\">See Our Portfolio</button>\n                    </AnchorLink>\n                </div>\n                <div class=\"mouse\">\n                    <div class=\"scroller\"></div>\n                </div>\n            </HeaderWrapper>\n        </>\n    );\n}\n"],"sourceRoot":""}