{"version":3,"sources":["webpack:///./src/pages/thanks.js","webpack:///./src/components/sections/Contact.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_common_layout__WEBPACK_IMPORTED_MODULE_1__","_common_navbar__WEBPACK_IMPORTED_MODULE_2__","_common_footer__WEBPACK_IMPORTED_MODULE_3__","_sections_Contact__WEBPACK_IMPORTED_MODULE_4__","_styles_global__WEBPACK_IMPORTED_MODULE_5__","styled_components__WEBPACK_IMPORTED_MODULE_6__","StyledSection","styled","Section","withConfig","displayName","componentId","props","theme","screen","sm","a","createElement","ContactForm","react__WEBPACK_IMPORTED_MODULE_7___default","formik__WEBPACK_IMPORTED_MODULE_8__","initialValues","name","email","message","validate","values","errors","length","test","onSubmit","data","fetch","method","headers","Content-Type","body","_objectSpread","form-name","Object","keys","map","key","encodeURIComponent","join","then","navigate","catch","error","alert","_ref","isSubmitting","touched","data-netlify","action","type","value","className","htmlFor","autocomplete","component","rows"],"mappings":"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","file":"component---src-pages-thanks-js-c3bb75fb413816ec6c90.js","sourcesContent":["import React from 'react';\nimport Layout from '@common/layout';\nimport Menu from '@common/navbar';\nimport Footer from '@common/footer';\nimport Contact from '@sections/Contact';\nimport { Section, Container } from '@styles/global';\nimport styled from 'styled-components';\n\nconst StyledSection = styled(Section)`\n    padding: 5rem 0;\n    @media (min-width: ${props => props.theme.screen.sm}) {\n        padding: 7rem 0;\n    }\n`;\n\nexport default () => (\n    <Layout>\n        <Menu />\n        <StyledSection>\n            <Container>\n                <h2>Thank you.</h2>\n                <p>\n                    We appreciate your contacting us. We will be in touch as\n                    soon as we could.\n                </p>\n                <Contact />\n            </Container>\n        </StyledSection>\n        <Footer />\n    </Layout>\n);\n","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { navigate } from 'gatsby';\n\nfunction encode(data) {\n    return Object.keys(data)\n        .map(\n            key => encodeURIComponent(key) + '=' + encodeURIComponent(data[key])\n        )\n        .join('&');\n}\n\nconst ContactForm = () => (\n    <Formik\n        initialValues={{ name: '', email: '', message: '' }}\n        validate={values => {\n            let errors = {};\n            if (!values.name) {\n                errors.name = 'Name is required';\n            } else if (values.name.length < 3) {\n                errors.name = 'Name is too short';\n            }\n            if (!values.email) {\n                errors.email = 'Email is required';\n            } else if (\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n            ) {\n                errors.email = 'Invalid email address';\n            }\n            if (!values.message) {\n                errors.message = 'Say something, maybe?';\n            } else if (values.message.length < 20) {\n                errors.message = 'Message is too short';\n            }\n            return errors;\n        }}\n        onSubmit={values => {\n            fetch('/contact', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                body: encode({\n                    'form-name': 'Contact Form',\n                    ...values,\n                }),\n            })\n                .then(navigate('/thanks'))\n                .catch(error => alert(error));\n        }}\n    >\n        {({ isSubmitting, errors, touched }) => (\n            <Form name=\"Contact Form\" data-netlify=\"true\" action=\"/thanks\">\n                <input type=\"hidden\" name=\"form-name\" value=\"Contact Form\" />\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Name</label>\n                    <Field\n                        type=\"text\"\n                        name=\"name\"\n                        className={\n                            errors.name && touched.name ? ' has-error' : ''\n                        }\n                        autocomplete=\"off\"\n                    />\n                    <ErrorMessage\n                        name=\"name\"\n                        component=\"code\"\n                        className=\"error-message\"\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email </label>\n                    <Field\n                        type=\"email\"\n                        name=\"email\"\n                        className={\n                            errors.email && touched.email ? ' has-error' : ''\n                        }\n                        autocomplete=\"off\"\n                    />\n                    <ErrorMessage\n                        name=\"email\"\n                        component=\"code\"\n                        className=\"error-message\"\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"message\">Message</label>\n                    <Field\n                        component=\"textarea\"\n                        rows=\"8\"\n                        name=\"message\"\n                        className={\n                            errors.message && touched.message\n                                ? ' has-error'\n                                : ''\n                        }\n                    />\n                    <ErrorMessage\n                        name=\"message\"\n                        component=\"code\"\n                        className=\"error-message\"\n                    />\n                </div>\n                <button className=\"button\" type=\"submit\">\n                    Submit\n                </button>\n            </Form>\n        )}\n    </Formik>\n);\n\nexport default ContactForm;\n"],"sourceRoot":""}