{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/styles/global.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/SEO.js","webpack:///./src/components/common/layout.js","webpack:///./static/cover.jpg","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_common_layout__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_3__","_styles_global__WEBPACK_IMPORTED_MODULE_4__","StyledContainer","styled","Container","withConfig","displayName","componentId","NotFoundPage","a","createElement","to","className","d","Section","SectionTitle","Overlay","styled_components__WEBPACK_IMPORTED_MODULE_0__","theme","screen","xs","sm","md","lg","div","props","fluid","section","alt","accent","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","m","module","exports","require","default","SEO","_ref","lang","meta","keywords","title","description","image","pathname","data","_public_static_d_3030054132_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","site","siteMetadata","metaImage","siteUrl","defaultImage","metaUrl","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","width","height","length","join","defaultProps","Layout","children","_public_static_d_980326015_json__WEBPACK_IMPORTED_MODULE_0__","styled_components__WEBPACK_IMPORTED_MODULE_2__","Fragment","_utils_SEO__WEBPACK_IMPORTED_MODULE_4__","p","ProdPageRenderer","location","pageResources","InternalPageRenderer","_objectSpread","json"],"mappings":"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","file":"component---src-pages-404-js-4d3e60787a43f09f3238.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport Layout from '@common/layout';\nimport styled from 'styled-components';\nimport { Container } from '@styles/global';\n\nconst StyledContainer = styled(Container)`\n    display: flex;\n    flex-flow: column;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n`;\n\nconst NotFoundPage = () => (\n    <Layout>\n        <StyledContainer>\n            <h1>NOT FOUND</h1>\n            <p>\n                You just hit a page that doesn&#39;t exist or has been removed.\n            </p>\n            <Link to=\"/\">\n                <button className=\"button\">Go back</button>\n            </Link>\n        </StyledContainer>\n    </Layout>\n);\n\nexport default NotFoundPage;\n","import styled from 'styled-components';\n\nconst theme = {\n    screen: {\n        xs: '575px',\n        sm: '767px',\n        md: '991px',\n        lg: '1199px',\n    },\n};\nexport default theme;\n\nexport const Container = styled.div`\n    max-width: var(--max-width);\n    width: 100%;\n    margin: 0 auto;\n    padding: 0 1.5rem;\n\n    ${props =>\n        props.fluid &&\n        `\n        max-width: 100%;\n    `};\n`;\n\nexport const Section = styled.section`\n    padding: 4rem 0;\n\n    ${props =>\n        props.alt &&\n        `\n        background-color: var(--accent-color);  \n    `};\n\n    ${props =>\n        props.accent === 'alt' &&\n        `\n        background-color: var(--alt-blue);\n        h2,\n        p {\n            color: var(--accent-color)!important;\n        }\n    `};\n`;\n\nexport const SectionTitle = styled.div`\n    margin-bottom: 3rem;\n    text-align: center;\n\n    @media (min-width: ${props => props.theme.screen.sm}) {\n        margin-bottom: 5rem;\n    }\n`;\n\n/**\n *  background overlay color\n *\n *  red -- rgba(210, 24, 76, 0.7)\n *  brown -- rgba(183, 73, 73, 0.7)\n *  blue -- rgba(29, 69, 106, 0.7)\n *  black --  rgba(16, 36, 55, 0.7)\n *  green -- rgba(0, 159, 153, 0.7)\n */\n\nexport const Overlay = styled.div`\n    background: rgba(12, 23, 41, 0.8);\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    opacity: 1;\n    transition: all 0.4s ease-in-out 0s;\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport defaultImage from '@static/cover.jpg';\n\nexport default function SEO({\n    lang,\n    meta,\n    keywords,\n    title,\n    description,\n    image,\n    pathname,\n}) {\n    const data = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        siteUrl\n                        description\n                        social {\n                            twitter\n                        }\n                    }\n                }\n            }\n        `\n    );\n\n    const metaDescription = description || data.site.siteMetadata.description;\n    const metaImage = data.site.siteMetadata.siteUrl + (image || defaultImage);\n    const metaUrl = `${data.site.siteMetadata.siteUrl}${pathname}`;\n\n    return (\n        <Helmet\n            htmlAttributes={{\n                lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:title`,\n                    content: title,\n                },\n                {\n                    property: `og:url`,\n                    content: metaUrl,\n                },\n                {\n                    property: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: `@${data.site.siteMetadata.social.twitter}`,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n            ]\n                .concat(\n                    metaImage\n                        ? [\n                              {\n                                  property: `og:image`,\n                                  content: metaImage,\n                              },\n                              {\n                                  property: `og:image:alt`,\n                                  content: title,\n                              },\n                              {\n                                  property: 'og:image:width',\n                                  content: image.width,\n                              },\n                              {\n                                  property: 'og:image:height',\n                                  content: image.height,\n                              },\n                              {\n                                  name: `twitter:card`,\n                                  content: `summary_large_image`,\n                              },\n                              {\n                                  name: `twitter:image`,\n                                  content: metaImage,\n                              },\n                          ]\n                        : [\n                              {\n                                  name: `twitter:card`,\n                                  content: `summary`,\n                              },\n                          ]\n                )\n                .concat(\n                    keywords.length > 0\n                        ? {\n                              name: `keywords`,\n                              content: keywords.join(`, `),\n                          }\n                        : []\n                )\n                .concat(meta)}\n        />\n    );\n}\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    keywords: [],\n    pathname: ``,\n    image: ``,\n};\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport theme from '@styles/global';\nimport SEO from '@utils/SEO';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nexport default function Layout({ children }) {\n    const data = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                    }\n                }\n            }\n        `\n    );\n    return (\n        <ThemeProvider theme={theme}>\n            <>\n                <SEO title={data.site.siteMetadata.title} />\n                <main>{children}</main>\n            </>\n        </ThemeProvider>\n    );\n}\n","module.exports = __webpack_public_path__ + \"static/cover-030d79644f497a8e06c7ed38f6cd550d.jpg\";","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}