{"version":3,"sources":["webpack:///./src/pages/spreadsheet.js","webpack:///./src/components/common/menu.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_common_layout__WEBPACK_IMPORTED_MODULE_1__","_utils_SEO__WEBPACK_IMPORTED_MODULE_2__","_common_menu__WEBPACK_IMPORTED_MODULE_3__","_common_heroImage__WEBPACK_IMPORTED_MODULE_4__","_common_footer__WEBPACK_IMPORTED_MODULE_5__","_utils_externalLink__WEBPACK_IMPORTED_MODULE_6__","_styles_global__WEBPACK_IMPORTED_MODULE_7__","Table","styled","table","withConfig","displayName","componentId","Data","_ref","data","a","createElement","title","fileName","accent","className","href","allGoogleSheetSmgRow","edges","map","obj","node","state","data-title","tanf","snap","unemployment","medicaid","Menu","react__WEBPACK_IMPORTED_MODULE_3___default","Fragment","name","path","_styles_navstyles_js__WEBPACK_IMPORTED_MODULE_5__","key","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","Navbar","props","_useState","useState","isMenuOpen","setIsMenuOpen","toggleClassName","changeMenuColor","_public_static_d_558995515_json__WEBPACK_IMPORTED_MODULE_2__","Object","assign","site","siteMetadata","desktop","onClick"],"mappings":"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","file":"component---src-pages-spreadsheet-js-cf407158258be7301b0e.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '@common/layout';\nimport SEO from '@utils/SEO';\nimport Menu from '@common/menu';\nimport Hero from '@common/heroImage';\nimport Footer from '@common/footer';\nimport ExternalLink from '@utils/externalLink';\nimport { Section, Container } from '@styles/global';\nimport styled from 'styled-components';\n\nconst Table = styled.table`\n    font-size: 80%;\n    letter-spacing: 1.5px;\n\n    tr {\n        cursor: pointer;\n\n        :hover {\n            background: var(--alt-color);\n        }\n    }\n    td:first-child {\n        font-weight: 500;\n    }\n`;\n\nexport const query = graphql`\n    query {\n        allGoogleSheetSmgRow {\n            edges {\n                node {\n                    snap\n                    state\n                    tanf\n                    medicaid\n                    unemployment\n                }\n            }\n        }\n    }\n`;\n\nconst Data = ({ data }) => (\n    <Layout>\n        <SEO title=\"DATA\" />\n        <Hero fileName=\"google.png\" />\n        <Menu accent=\"inverse\" />\n        <Section>\n            <Container>\n                <p>\n                    No database. Data is pulled in from Google Spreadsheet using{' '}\n                    <code className=\"language-text\">\n                        <ExternalLink href=\"https://www.gatsbyjs.org/packages/gatsby-source-google-sheets/\">\n                            gatsby-source-google-sheets\n                        </ExternalLink>\n                    </code>{' '}\n                    + <strong>GraphQL</strong> at build time.\n                </p>\n                <Table>\n                    <thead>\n                        <tr>\n                            <th>STATE</th>\n                            <th>TANF</th>\n                            <th>SNAP</th>\n                            <th>UNEMPLOYMENT</th>\n                            <th>MEDICAID</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.allGoogleSheetSmgRow.edges.map(obj => (\n                            <tr>\n                                <td>{obj.node.state}</td>\n                                <td data-title=\"TANF\">${obj.node.tanf}</td>\n                                <td data-title=\"SNAP\">${obj.node.snap}</td>\n                                <td data-title=\"UNEMPLOYMENT\">\n                                    ${obj.node.unemployment}\n                                </td>\n                                <td data-title=\"MEDICAID\">\n                                    {obj.node.medicaid}%\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            </Container>\n        </Section>\n        <Footer />\n    </Layout>\n);\n\nexport default Data;\n","import React, { useState } from 'react';\nimport { Link } from 'gatsby';\nimport { useStaticQuery, graphql } from 'gatsby';\n\n/*\nimport { ReactComponent as Logo } from '@static/logo.svg';\n*/\n\nimport {\n    NavContainer,\n    Nav,\n    NavList,\n    NavItem,\n    Brand,\n    Mobile,\n    Hamburger,\n} from '@styles/navstyles.js';\n\nfunction Menu() {\n    const items = [\n        {\n            name: 'Data',\n            path: '/spreadsheet/',\n        },\n        {\n            name: 'Portfolio',\n            path: '/portfolio/',\n        },\n        {\n            name: 'Blog',\n            path: '/blog/',\n        },\n        {\n            name: 'Contact',\n            path: '/contact/',\n        },\n    ];\n    return (\n        <>\n            {items.map(({ name, path }) => {\n                return (\n                    <NavItem key={name}>\n                        <Link to={path}>{name}</Link>\n                    </NavItem>\n                );\n            })}\n        </>\n    );\n}\n\nexport default function Navbar(props) {\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    const toggleClassName = isMenuOpen ? 'hamburger is-open' : 'hamburger';\n    const changeMenuColor = isMenuOpen ? 'is-open' : '';\n\n    const data = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    title\n                }\n            }\n        }\n    `);\n    return (\n        <Nav {...props} className={changeMenuColor}>\n            <NavContainer>\n                <Brand>\n                    <Link to=\"/\">{data.site.siteMetadata.title}</Link>\n                </Brand>\n                <NavList desktop>\n                    <Menu />\n                </NavList>\n            </NavContainer>\n            <Mobile>\n                <Hamburger\n                    className={toggleClassName}\n                    onClick={() => setIsMenuOpen(!isMenuOpen)}\n                >\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                </Hamburger>\n\n                {isMenuOpen && (\n                    <NavList>\n                        <Menu />\n                    </NavList>\n                )}\n            </Mobile>\n        </Nav>\n    );\n}\n"],"sourceRoot":""}