{"version":3,"sources":["webpack:///./src/pages/tags.js","webpack:///./src/styles/global.js","webpack:///./src/utils/SEO.js","webpack:///./src/components/common/layout.js","webpack:///./static/cover.jpg","webpack:///./src/styles/navstyles.js","webpack:///./src/components/common/menu.js"],"names":["__webpack_require__","r","__webpack_exports__","d","tagQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_common_layout__WEBPACK_IMPORTED_MODULE_2__","_utils_SEO__WEBPACK_IMPORTED_MODULE_3__","_common_menu__WEBPACK_IMPORTED_MODULE_4__","_styles_global__WEBPACK_IMPORTED_MODULE_5__","TagList","styled","h4","withConfig","displayName","componentId","TagsPage","props","data","allMdx","group","a","createElement","title","map","tag","to","fieldValue","totalCount","Container","Section","styled_components__WEBPACK_IMPORTED_MODULE_0__","theme","screen","xs","sm","md","lg","div","fluid","section","accent","SEO","_ref","lang","meta","keywords","description","image","pathname","_public_static_d_3030054132_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","site","siteMetadata","metaImage","siteUrl","defaultImage","metaUrl","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","width","height","length","join","defaultProps","Layout","children","_public_static_d_980326015_json__WEBPACK_IMPORTED_MODULE_0__","styled_components__WEBPACK_IMPORTED_MODULE_2__","Fragment","_utils_SEO__WEBPACK_IMPORTED_MODULE_4__","module","exports","p","NavContainer","Nav","NavList","NavItem","Brand","Mobile","Hamburger","nav","ul","desktop","li","Menu","react__WEBPACK_IMPORTED_MODULE_3___default","path","_styles_navstyles_js__WEBPACK_IMPORTED_MODULE_5__","key","gatsby__WEBPACK_IMPORTED_MODULE_4__","Navbar","_useState","useState","isMenuOpen","setIsMenuOpen","toggleClassName","changeMenuColor","_public_static_d_558995515_json__WEBPACK_IMPORTED_MODULE_2__","Object","assign","className","onClick"],"mappings":"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","file":"component---src-pages-tags-js-93031bd3a3a59feebbf4.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Layout from '@common/layout';\nimport SEO from '@utils/SEO';\nimport Menu from '@common/menu';\nimport { Section, Container } from '@styles/global';\nimport styled from 'styled-components';\n\nconst TagList = styled.h4`\n    display: flex;\n    justify-content: space-between;\n`;\n\nfunction TagsPage(props) {\n    const data = props.data.allMdx.group;\n    const title = 'All Tags';\n    return (\n        <Layout>\n            <SEO title={title} />\n            <Menu />\n            <Section>\n                <Container>\n                    <h2>{title}</h2>\n                    <p>\n                        Similar to categories, tags are often used to organize\n                        your content. A tag is usually only a word or two and\n                        reflects the keywords or points of your article.\n                    </p>\n                    <hr />\n                    {data.map(tag => (\n                        <div>\n                            <Link to={`tag/${tag.fieldValue}`}>\n                                <TagList>\n                                    {tag.fieldValue}{' '}\n                                    <span>{`(${tag.totalCount})`}</span>\n                                </TagList>\n                            </Link>\n                            <hr />\n                        </div>\n                    ))}\n                </Container>\n            </Section>\n        </Layout>\n    );\n}\n\nexport default TagsPage;\n\nexport const tagQuery = graphql`\n    query {\n        allMdx {\n            group(field: frontmatter___tags) {\n                fieldValue\n                totalCount\n            }\n        }\n    }\n`;\n","import styled from 'styled-components';\n\nconst theme = {\n    screen: {\n        xs: '575px',\n        sm: '767px',\n        md: '991px',\n        lg: '1199px',\n    },\n};\nexport default theme;\n\nexport const Container = styled.div`\n    max-width: var(--max-width);\n    width: 100%;\n    margin: 0 auto;\n    padding: 0 1.5rem;\n\n    ${props =>\n        props.fluid &&\n        `\n        max-width: 100%;\n    `};\n`;\n\nexport const Section = styled.section`\n    padding: 5rem 0;\n\n    @media (min-width: ${props => props.theme.screen.sm}) {\n        padding: 7rem 0;\n    }\n\n    ${props =>\n        props.accent === 'secondary' &&\n        `\n        background-color: var(--primary-color);        \n    `};\n\n    ${props =>\n        props.accent === 'alt' &&\n        `\n        background-color: #266590; \n        h2,\n        p {\n            color: white;\n        }\n    `};\n\n    ${props =>\n        props.accent === 'magnus' &&\n        `\n        background-color: #3e505a;  \n        \n        h2,\n        p {\n            color: var(--accent-color);\n        }\n    `};\n\n    ${props =>\n        props.accent === 'matt' &&\n        `\n        background-color: #266590;  \n        \n        h2,\n        p {\n            color: var(--accent-color);\n        }\n    `};\n`;\n\nexport const Hero = styled(Container)`\n    display: flex;\n    flex-flow: column;\n    justify-content: center;\n    align-items: center;\n    min-width: 100%;\n    min-height: 100vh;\n    color: var(--secondary-color);\n    background-color: var(--primary-color);\n\n    ${props =>\n        props.accent === 'inverse' &&\n        `\n        background-color: var(--alt-color);\n    `};\n`;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport defaultImage from '@static/cover.jpg';\n\nexport default function SEO({\n    lang,\n    meta,\n    keywords,\n    title,\n    description,\n    image,\n    pathname,\n}) {\n    const data = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        siteUrl\n                        description\n                        social {\n                            twitter\n                        }\n                    }\n                }\n            }\n        `\n    );\n\n    const metaDescription = description || data.site.siteMetadata.description;\n    const metaImage = data.site.siteMetadata.siteUrl + (image || defaultImage);\n    const metaUrl = `${data.site.siteMetadata.siteUrl}${pathname}`;\n\n    return (\n        <Helmet\n            htmlAttributes={{\n                lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:title`,\n                    content: title,\n                },\n                {\n                    property: `og:url`,\n                    content: metaUrl,\n                },\n                {\n                    property: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: `@${data.site.siteMetadata.social.twitter}`,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n            ]\n                .concat(\n                    metaImage\n                        ? [\n                              {\n                                  property: `og:image`,\n                                  content: metaImage,\n                              },\n                              {\n                                  property: `og:image:alt`,\n                                  content: title,\n                              },\n                              {\n                                  property: 'og:image:width',\n                                  content: image.width,\n                              },\n                              {\n                                  property: 'og:image:height',\n                                  content: image.height,\n                              },\n                              {\n                                  name: `twitter:card`,\n                                  content: `summary_large_image`,\n                              },\n                              {\n                                  name: `twitter:image`,\n                                  content: metaImage,\n                              },\n                          ]\n                        : [\n                              {\n                                  name: `twitter:card`,\n                                  content: `summary`,\n                              },\n                          ]\n                )\n                .concat(\n                    keywords.length > 0\n                        ? {\n                              name: `keywords`,\n                              content: keywords.join(`, `),\n                          }\n                        : []\n                )\n                .concat(meta)}\n        />\n    );\n}\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    keywords: [],\n    pathname: ``,\n    image: ``,\n};\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport theme from '@styles/global';\nimport SEO from '@utils/SEO';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nexport default function Layout({ children }) {\n    const data = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                    }\n                }\n            }\n        `\n    );\n    return (\n        <ThemeProvider theme={theme}>\n            <>\n                <SEO title={data.site.siteMetadata.title} />\n                <main>{children}</main>\n            </>\n        </ThemeProvider>\n    );\n}\n","module.exports = __webpack_public_path__ + \"static/cover-030d79644f497a8e06c7ed38f6cd550d.jpg\";","import styled from 'styled-components';\n\nexport const NavContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    @media (max-width: ${props => props.theme.screen.md}) {\n        padding: 0 1.5rem;\n    }\n`;\n\nexport const Nav = styled.nav`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    width: 100%;\n    max-width: var(--max-width);\n    margin: 0 auto;\n    z-index: 1000;\n    padding: 1rem 1.5rem;\n    background-color: transparent;\n\n    @media (max-width: ${props => props.theme.screen.md}) {\n        padding: 1rem 0;\n    }\n\n    &.is-open {\n        /** change background and link color when menu is open */\n        background-color: var(--alt-color);\n        height: 100vh;\n        overflow: hidden;\n        a {\n            color: var(--secondary-color);\n        }\n    }\n\n    font-size: 90%;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n\n    ${props =>\n        props.accent ===\n            'inverse' /** change link color to white on dark background */ &&\n        `\n        a {\n            color: var(--accent-color);\n        }\n    }\n    `};\n\n    ${props =>\n        props.fluid /** stretch menu to 100% width  */ &&\n        `\n        max-width: 100%;\n    `};\n`;\n\nexport const NavList = styled.ul`\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    margin: 1rem 0;\n\n    ${props =>\n        props.desktop &&\n        `\n        flex-direction: row;\n        margin: 0;\n        \n        @media (max-width: ${props.theme.screen.md}) {\n            display: none;\n        }\n    `};\n`;\n\nexport const NavItem = styled.li`\n    position: relative;\n    margin-bottom: 0;\n    margin-left: 1.5rem;\n    width: 100%;\n    font-weight: 600;\n\n    @media (max-width: ${props => props.theme.screen.md}) {\n        margin-left: 0;\n        padding: 0.75rem 1.5rem;\n        border-bottom: 1px solid rgba(225, 225, 225, 0.4);\n\n        &:first-child {\n            border-top: 1px solid rgba(225, 225, 225, 0.4);\n        }\n    }\n\n    &.active {\n        a {\n            font-weight: 600;\n        }\n    }\n    @media (min-width: ${props => props.theme.screen.md}) {\n        ::after {\n            content: '';\n            position: absolute;\n            width: 100%;\n            transform: scaleX(0);\n            height: 2px;\n            bottom: 0;\n            left: 0;\n            background-color: var(--secondary-color);\n            transform-origin: bottom right;\n            transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\n        }\n        :hover::after {\n            transform: scaleX(1);\n            transform-origin: bottom left;\n        }\n    }\n`;\n\nexport const Brand = styled.div`\n    font-weight: 600;\n`;\n\nexport const Mobile = styled.div`\n    opacity: 0;\n    display: none;\n    transition: all 0.25s ease;\n\n    @media (max-width: ${props => props.theme.screen.md}) {\n        opacity: 1;\n        display: block;\n        visibility: visible;\n    }\n`;\n\nexport const Hamburger = styled.div`\n    position: absolute;\n    top: 1rem;\n    right: 1.5rem;\n    width: 25px;\n    cursor: pointer;\n    -webkit-tap-highlight-color: hsla(0, 0%, 0%, 0);\n    -webkit-tap-highlight-color: transparent;\n\n    span {\n        display: block;\n        opacity: 1;\n        width: 100%;\n        height: 3px;\n        margin: 4px 0;\n        background: var(--secondary-color);\n        transition: all 0.25s ease-in-out;\n\n        &:nth-child(2) {\n            width: 70%;\n        }\n    }\n\n    &.is-open {\n        span {\n            background: var(--secondary-color);\n        }\n        span:first-child {\n            transform: translateY(8px) translateY(-50%) rotate(45deg);\n        }\n        span:nth-child(2) {\n            opacity: 0;\n        }\n        span:last-child {\n            transform: translateY(-9px) translateY(50%) rotate(-45deg);\n        }\n    }\n`;\n","import React, { useState } from 'react';\nimport { Link } from 'gatsby';\nimport { useStaticQuery, graphql } from 'gatsby';\n\n/*\nimport { ReactComponent as Logo } from '@static/logo.svg';\n*/\n\nimport {\n    NavContainer,\n    Nav,\n    NavList,\n    NavItem,\n    Brand,\n    Mobile,\n    Hamburger,\n} from '@styles/navstyles.js';\n\nfunction Menu() {\n    const items = [\n        {\n            name: 'Data',\n            path: '/spreadsheet/',\n        },\n        {\n            name: 'Portfolio',\n            path: '/portfolio/',\n        },\n        {\n            name: 'Blog',\n            path: '/blog/',\n        },\n        {\n            name: 'Contact',\n            path: '/contact/',\n        },\n    ];\n    return (\n        <>\n            {items.map(({ name, path }) => {\n                return (\n                    <NavItem key={name}>\n                        <Link to={path}>{name}</Link>\n                    </NavItem>\n                );\n            })}\n        </>\n    );\n}\n\nexport default function Navbar(props) {\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    const toggleClassName = isMenuOpen ? 'hamburger is-open' : 'hamburger';\n    const changeMenuColor = isMenuOpen ? 'is-open' : '';\n\n    const data = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    title\n                }\n            }\n        }\n    `);\n    return (\n        <Nav {...props} className={changeMenuColor}>\n            <NavContainer>\n                <Brand>\n                    <Link to=\"/\">{data.site.siteMetadata.title}</Link>\n                </Brand>\n                <NavList desktop>\n                    <Menu />\n                </NavList>\n            </NavContainer>\n            <Mobile>\n                <Hamburger\n                    className={toggleClassName}\n                    onClick={() => setIsMenuOpen(!isMenuOpen)}\n                >\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                </Hamburger>\n\n                {isMenuOpen && (\n                    <NavList>\n                        <Menu />\n                    </NavList>\n                )}\n            </Mobile>\n        </Nav>\n    );\n}\n"],"sourceRoot":""}